CREATE SCHEMA cinema
    AUTHORIZATION postgres;

CREATE TABLE cinema.movies
(
    id bigserial,
    title character varying(150) NOT NULL,
    duration integer NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE cinema.sessions
(
    id bigserial,
    start_time date NOT NULL,
    price numeric(10, 2) NOT NULL,
    movie_id bigint NOT NULL,
    PRIMARY KEY (id),
    CONSTRAINT fk_movie FOREIGN KEY (movie_id)
        REFERENCES cinema.movies (id) MATCH SIMPLE
        ON UPDATE CASCADE
        ON DELETE CASCADE
);

CREATE TABLE cinema.sessions
(
    id bigserial,
    date_time date NOT NULL,
    start_time time without time zone NOT NULL,
    price numeric(10, 2) NOT NULL,
    movie_id bigint NOT NULL,
    PRIMARY KEY (id),
    CONSTRAINT fk_movie FOREIGN KEY (movie_id)
        REFERENCES cinema.movies (id) MATCH SIMPLE
        ON UPDATE CASCADE
        ON DELETE CASCADE
);

INSERT INTO cinema.movies (title, duration) 
VALUES ('Movie_1', 60), ('Movie_2', 90), ('Movie_3', 120);

INSERT INTO cinema.sessions (start_time, price, movie_id) 
VALUES 
('2021-07-26 10:00:00', '150', '1'), 
('2021-07-26 12:30:00', '200', '2'), 
('2021-07-26 15:00:00', '220', '2'), 
('2021-07-26 17:30:00', '200', '1'),
('2021-07-26 20:00:00', '250', '3');

INSERT INTO cinema.tickets (place, session_id) 
VALUES 
('2', '1'), 
('3', '1'),
('5', '2');

-- first request
SELECT 
    m.title,
    s.start_time,
    m.duration
FROM
	cinema.movies as m 
		JOIN
	cinema.sessions s on m.id = s.movie_id
order by m.duration;

--second request
не понял как сделать

--third request
SELECT 
    m.title, COUNT(t.id), AVG(s.price)
FROM
    cinema.movies m
        JOIN
    cinema.sessions s ON m.id = s.movie_id
        JOIN
    cinema.tickets t ON s.id = t.session_id
GROUP BY m.id;

--fourth request
select EXTRACT(HOUR FROM start_time) as started, sum(price), count(*) 
from cinema.sessions s
join cinema.tickets b on s.id = b.session_id
group by
(EXTRACT(HOUR FROM started) >= 9 and EXTRACT(HOUR FROM started) < 15),
(EXTRACT(HOUR FROM started) > 15 and EXTRACT(HOUR FROM started) < 18),
(EXTRACT(HOUR FROM started) > 18 and EXTRACT(HOUR FROM started) < 21),
(EXTRACT(HOUR FROM started) > 21 and EXTRACT(HOUR FROM started) < 00);





